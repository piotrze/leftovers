include_paths: '*.rjs'
precompile:
  - paths: '*.rjs'
    format: erb

gems:
  - activesupport
  - actionview


keep:
  # https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-constraints
  - matches?

  # https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Concerns.html#method-i-concern
  - call

  # https://edgeapi.rubyonrails.org/classes/AbstractController/Rendering.html#method-i-view_assigns
  - view_assigns

  # https://edgeapi.rubyonrails.org/classes/ActionController/RequestForgeryProtection/ClassMethods.html#method-i-protect_from_forgery
  - handle_unverified_request

  - has_suffix: Helper
    path: /app/helpers

dynamic:
  # https://edgeapi.rubyonrails.org/classes/AbstractController/Callbacks.html
  - names:
      - after_action
      - append_after_action
      - append_around_action
      - append_before_action
      - around_action
      - before_action
      - prepend_after_action
      - prepend_around_action
      - prepend_before_action
    calls:
      - arguments: '*'
      - arguments: [if, unless]
        nested: '*'

  - names:
    - skip_after_action
    - skip_around_action
    - skip_before_action
    calls:
      arguments: [if, unless]
      nested: '*'

  - names: protect_from_forgery
    calls:
      arguments: [if, unless]
      nested: '*'


  # https://edgeapi.rubyonrails.org/classes/ActionController/Logging/ClassMethods.html#method-i-log_at
  - names: log_at
    calls:
      arguments: [if, unless]
      nested: '*'


  - name: helper
    calls:
      - arguments: '*'
        camelize: true

  # https://edgeapi.rubyonrails.org/classes/ActionController/TestCase/Behavior.html
  - names: [delete, get, head, patch, put, post]
    unless:
      has_argument: 1
    calls: 0

  - names: process
    calls: 0
    unless:
      has_argument: 1

  # https://edgeapi.rubyonrails.org/classes/AbstractController/Helpers/ClassMethods.html
  - name: scope
    unless:
      has_argument:
        at: 1
        has_value:
          type: Proc
    calls:
      argument: module # routes
      camelize: true
      split: '::'

  - name:
      # https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-match
      - match
      # https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html
      - delete
      - get
      - options
      - patch
      - post
      - put
      # https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-namespace
      - root
    calls:
      - argument: action
      - argument: controller
        camelize: true
        add_suffix: Controller
        split: '::'
      - argument: 'to'
        delete_before: '#'
      - argument: 'to'
        delete_after: '#'
        camelize: true
        add_suffix: Controller
        split: '::'
      - argument: module
        camelize: true
        split: '::'
      # these might not make sense for root
      - argument: { type: String }
        delete_before: '#'
      - argument: { type: String }
        delete_after: '#'
        camelize: true
        add_suffix: Controller
        split: '::'

    # https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-match
    # defines:
      # my logic is, `as:` generates a method you chose, everything else you might just be setting up the routes to be whatever.
      # argument: as
      # add_suffix: [_path, _url]

    # unfortunately we can't do this as the method generated by as: depends on scope/namespace and we can't look up yet

  # https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-root
  # in addition to the above nonsense, root can also have the to: as the first positional argument
  - name: root
    calls:
    - argument: 0
      delete_before: '#'
    - argument: 0
      delete_after: '#'
      camelize: true
      add_suffix: Controller
      split: '::'
  # https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/CustomUrls.html#method-i-direct
  - name: direct
    defines:
      argument: 0
      add_suffix: [_path, _url]

  # https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/CustomUrls.html#method-i-resolve
  - name: resolve
    calls:
      argument: 0
      split: '::'

  # https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resources
  # https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resource
  - name:
      - resource
      - resources
    has_argument: 0
    calls:
      - argument: only
      - argument: only
        nested:
          argument: '*'
      - argument: controller
        camelize: true
        add_suffix: Controller
        split: '::'
  - name:
    - resource
    - resources
    has_argument: 0
    unless:
      has_argument:
        - at: only
        - at: except
          has_value: index
        - at: except
          has_value:
            at: '*'
            has_value: index
    calls:
      - value: index
  - name:
    - resource
    - resources
    has_argument: 0
    unless:
      has_argument:
        - at: only
        - at: except
          has_value: new
        - at: except
          has_value:
            at: '*'
            has_value: new
    calls:
      - value: new
  - name:
    - resource
    - resources
    has_argument: 0
    unless:
      has_argument:
        - at: only
        - at: except
          has_value: create
        - at: except
          has_value:
            at: '*'
            has_value: create
    calls:
      - value: create
  - name:
    - resource
    - resources
    has_argument: 0
    unless:
      has_argument:
        - at: only
        - at: except
          has_value: edit
        - at: except
          has_value:
            at: '*'
            has_value: edit
    calls:
      - value: edit
  - name:
    - resource
    - resources
    has_argument: 0
    unless:
      has_argument:
        - at: only
        - at: except
          has_value: update
        - at: except
          has_value:
            at: '*'
            has_value: update
    calls:
      - value: update
  - name:
    - resource
    - resources
    has_argument: 0
    unless:
      has_argument:
        - at: only
        - at: except
          has_value: destroy
        - at: except
          has_value:
            at: '*'
            has_value: destroy
    calls:
      - value: destroy
  - name:
      - resources
      - resource
      # https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-controller
      - controller
    calls:
      - argument: 0
        camelize: true
        add_suffix: Controller
        split: '::'
  - name: resource
    calls:
      - argument: 0
        camelize: true
        pluralize: true
        add_suffix: Controller
        split: '::'

  # https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-namespace
  - name: namespace
    has_argument: module
    calls:
      argument: module
      camelize: true
      split: '::'
  - name: namespace
    unless:
      has_argument: module
    calls:
      argument: 0
      camelize: true
      split: '::'

  # this is not technically calling these,
  # but it feels useful nonetheless as permit will (generally) be used to process
  # before calling AR or AM #create or #update
  - name: permit
    calls:
      arguments: ['*', '**']
      keywords: '**'
      add_suffix: "="
      recursive: true
